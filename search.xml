<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>你好，我的博客世界!!!</title>
    <url>/2022/05/29/My_HexoBlog_with_Next(2)/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start">Quick Start</h2>
<h3 id="Create-a-new-post">Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server">Run server</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files">Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
<h3 id="links">links</h3>
<p>具体怎么创建博客，可以参考博客诞生过程</p>
<p><a href="https://blog.imql.life/">博客创建方式</a></p>
<p><a href="https://butterfly.js.org/">Butterfly主题设置</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/22405775">博客创建文章</a></p>
]]></content>
      <categories>
        <category>我的博客诞生</category>
      </categories>
      <tags>
        <tag>世界</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言中结构体struct的用法</title>
    <url>/2022/05/30/My_HexoBlog_with_Next(2)/</url>
    <content><![CDATA[<h2 id="定义结构体变量">定义结构体变量</h2>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">string</span> </span></span><br><span class="line"><span class="class">&#123;</span> </span><br><span class="line">   <span class="type">char</span> name[<span class="number">8</span>]; </span><br><span class="line">   <span class="type">int</span> age; </span><br><span class="line">   <span class="type">char</span> sex[<span class="number">2</span>]; </span><br><span class="line">   <span class="type">char</span> depart[<span class="number">20</span>]; </span><br><span class="line">   <span class="type">float</span> wage1, wage2, wage3, wage4, wage5; </span><br><span class="line">&#125;person;</span><br></pre></td></tr></table></figure>
<p>这个例子定义了一个结构名为string的结构体变量person。还可以省略变量名person，做如下定义：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">string</span> </span></span><br><span class="line"><span class="class"> &#123;</span> </span><br><span class="line">    <span class="type">char</span> name[<span class="number">8</span>]; </span><br><span class="line">    <span class="type">int</span> age; </span><br><span class="line">    <span class="type">char</span> sex[<span class="number">2</span>]; </span><br><span class="line">    <span class="type">char</span> depart[<span class="number">20</span>]; </span><br><span class="line">    <span class="type">float</span> wage1, wage2, wage3, wage4, wage5; </span><br><span class="line"> &#125;;  </span><br><span class="line"> <span class="class"><span class="keyword">struct</span> <span class="title">string</span> <span class="title">person</span>;</span>   <span class="comment">//定义结构名为string的结构体变量person</span></span><br></pre></td></tr></table></figure>
<p>定义多个具有相同形式的结构变量：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">string</span> <span class="title">Liming</span>, <span class="title">Liuqi</span>, ...;</span></span><br></pre></td></tr></table></figure>
<p>有一种结构体常常出现在函数内部，省略结构名，则称之为无名结构，如下：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> </span></span><br><span class="line"><span class="class">&#123;</span> </span><br><span class="line">   <span class="type">char</span> name[<span class="number">8</span>]; </span><br><span class="line">   <span class="type">int</span> age; </span><br><span class="line">   <span class="type">char</span> sex[<span class="number">2</span>]; </span><br><span class="line">   <span class="type">char</span> depart[<span class="number">20</span>]; </span><br><span class="line">   <span class="type">float</span> wage1, wage2, wage3, wage4, wage5; </span><br><span class="line">&#125; Liming, Liuqi;</span><br></pre></td></tr></table></figure>
<h2 id="结构体成员的获取与赋值">结构体成员的获取与赋值</h2>
<p>结构是一个新的数据类型，结构成员的表示方式为:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">结构变量.成员名</span><br></pre></td></tr></table></figure>
<p>如果将&quot;结构变量.成员名&quot;看成一个整体，这样就可以像其他变量那样使用。</p>
<p>下面这个例子定义了一个结构变量stu1，分别给name,age,group赋值，并打印输出。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line">        <span class="type">char</span> *name;  <span class="comment">//姓名</span></span><br><span class="line">        <span class="type">int</span> age;  <span class="comment">//年龄</span></span><br><span class="line">        <span class="type">char</span> group;  <span class="comment">//所在小组</span></span><br><span class="line">    &#125; stu1;</span><br><span class="line">    <span class="comment">//给结构体成员赋值</span></span><br><span class="line">    stu1.name = <span class="string">&quot;Tom&quot;</span>;</span><br><span class="line">    stu1.age = <span class="number">18</span>;</span><br><span class="line">    stu1.group = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">    <span class="comment">//读取结构体成员的值</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s的年龄是%d，在%c组\n&quot;</span>, stu1.name, stu1.age, stu1.group);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="结构体数组">结构体数组</h2>
<p>结构体数组就是具有相同结构类型的变量集合，假如要定义一个班级40个同学 的姓名、性别、年龄和住址, 可以定义成一个结构数组。如下所示：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">char</span> name[<span class="number">8</span>]; </span><br><span class="line">    <span class="type">char</span> sex[<span class="number">2</span>]; </span><br><span class="line">    <span class="type">int</span> age; </span><br><span class="line">    <span class="type">char</span> addr[<span class="number">40</span>]; </span><br><span class="line">&#125;student[<span class="number">40</span>];</span><br></pre></td></tr></table></figure>
<p>结构体数组成员的访问是以数组元素为结构变量的, 其形式为:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">结构数组元素.成员名</span><br></pre></td></tr></table></figure>
<p>例如：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">student[<span class="number">0</span>].name</span><br><span class="line">student[<span class="number">30</span>].age</span><br></pre></td></tr></table></figure>
<h2 id="结构体指针">结构体指针</h2>
<p>结构体指针由一个加在结构变量名前的*操作符来定义，定义一个结构体指针如下：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">string</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">   <span class="type">char</span> name[<span class="number">8</span>] </span><br><span class="line">   <span class="type">char</span> sex[<span class="number">2</span>]; </span><br><span class="line">   <span class="type">int</span> age; </span><br><span class="line">   <span class="type">char</span> addr[<span class="number">40</span>]; </span><br><span class="line">&#125;*student;</span><br></pre></td></tr></table></figure>
<p>使用结构体指针对结构体成员的访问与结构体变量对结构体成员的访问在表达方式不同。结构体指针对结构体成员的访问方式为：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">结构体指针名-&gt;结构体成员 </span><br></pre></td></tr></table></figure>
<p>给上面定义的结构体中name和age赋值的语句：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">strcpy</span>(student-&gt;name, <span class="string">&quot;acket&quot;</span>); <span class="comment">//student-&gt;name就是(*student).name</span></span><br><span class="line">student-&gt;age=<span class="number">18</span>; </span><br></pre></td></tr></table></figure>
<p>需要指出的是结构体指针是指向结构体的一个指针，即结构体中第一个成员的首地址，因此在使用之前应该对结构体指针初始化，即分配整个结构体长度的字节空间：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">student=(<span class="keyword">struct</span> <span class="built_in">string</span>*)<span class="built_in">malloc</span>(size of (<span class="keyword">struct</span> <span class="built_in">string</span>));</span><br><span class="line"><span class="comment">//size of (struct string)是自动求取string结构体的字节长度</span></span><br></pre></td></tr></table></figure>
<p>malloc()函数定义了一个大小为结构体长度的内存区域，然后将其地址作为结构体指针返回，相关文章:<a href="http://mp.weixin.qq.com/s?__biz=MzI1MDg4OTMwMw==&amp;mid=2247484098&amp;idx=2&amp;sn=53a5d30075027b190205da6a83fef682&amp;chksm=e9fa17fade8d9eec6461cd135f1d559912daa6819084b9a88ffca258868f80be99bf5d3d1f2f&amp;scene=21#wechat_redirect">C语言中的内存管理</a>。</p>
<h2 id="位结构">位结构</h2>
<p>位结构是一种特殊的结构体，位结构定义的一般形式为：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span>  位结构名</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    数据类型 变量名: 整型常数; </span><br><span class="line">     数据类型 变量名: 整型常数; </span><br><span class="line">&#125;位结构变量;</span><br></pre></td></tr></table></figure>
<p>其中数据类型必须是int（unsigned或signed，但当成员长度为1时, 会被认为是unsigned类型），整型常数必须是0~15的非负整数，表示二进制位个数。变量名是选择项，可以不命名，下面定义了一个位结构：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">unsigned</span> incon: <span class="number">8</span>;    <span class="comment">/*incon占用低字节 的0~7共8位*/</span> </span><br><span class="line">    <span class="type">unsigned</span> txcolor: <span class="number">4</span>;<span class="comment">/*txcolor占用高字节的0~3位共4位*/</span> </span><br><span class="line">    <span class="type">unsigned</span> bgcolor: <span class="number">3</span>;<span class="comment">/*bgcolor占用高字节的4~6位共3位*/</span> </span><br><span class="line">    <span class="type">unsigned</span> blink: <span class="number">1</span>;  <span class="comment">/*blink占用高字节的第7位*/</span></span><br><span class="line"> &#125;ch;</span><br></pre></td></tr></table></figure>
<p>位结构成员的访问与结构体成员的访问相同，访问位结构中的bgcolor成员可写成：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">ch.bgcolor</span><br></pre></td></tr></table></figure>
<p>举个例子</p>
<p><img data-src="/images%5C%E7%BB%93%E6%9E%84%E4%BD%93.png" alt="例图"></p>
<h2 id="typedef定义结构体">typedef定义结构体</h2>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>  <span class="title">person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> age ;</span><br><span class="line">    <span class="type">char</span> *name;</span><br><span class="line">    <span class="type">char</span> *sex;</span><br><span class="line">&#125;student;</span><br><span class="line"></span><br><span class="line">student stu1; <span class="comment">//此处可以用student来定义一个结构体变量</span></span><br></pre></td></tr></table></figure>
<p>typedef的作用就相当于给struct person取了一个别名student。</p>
]]></content>
      <categories>
        <category>C语言基础知识</category>
      </categories>
      <tags>
        <tag>结构体</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言指针用法</title>
    <url>/2022/06/01/My_HexoBlog_with_Next(2)/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>C语言基础知识</category>
      </categories>
      <tags>
        <tag>指针</tag>
      </tags>
  </entry>
</search>
