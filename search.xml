<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>你好，我的博客世界!!!</title>
    <url>/2022/05/29/My_HexoBlog_with_Next(2)/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="d007f8f297edcfc9b3e97f0ef59f777b15214ad82cb6fea43b9f6a6f1efd367d">1f764dd9675bd4f300b7f0802d6ae56340ee86b74455f73daf12ebd6041ea214a6d5656d1cf13b16087fae59075ab4a87094ffa45c530a195ef3de43a7f74068fc9313e0ecd42521db5aede9e6dfc7a3cfeb96ccd3da2503a0bc131ad2652c3cbafedb2af593e0f7d9535e3b6f5003d2143f8a416a1656e5a62c4e9f6a623aade122961e3dbc2e65ea9bd4314a3b5973b8767b4b5a28c755012dc59ed0c08254817a403595b803a2c8b89c04b918e75f2f2bd638f1724baf69ea72623053aea53cedae1ac9108695c8b3f72806838e3d5ea62f1bc20f30576b5056ceab1d6882b6e9f2775e6b1432dbfeb7d15c0437349481cf91fc29ed72211251eade6401e14ae36d9919ec47a0e2969e844b06c239b804658ed8efc3f2a6a4d1415f74d159615dde3f65adc0395853b0df823d3df46b09d030b3f07de647850139779f38c3c0ae871ac5763f940c893f13ee017b5dbd798056ff18e3f04d20a65b367b5fc74f218b79f72f8e67b618dd588684ea5e4c2b7d1668a68d231c1476b6a655672545eacecf44afd203e6934aeb8aa9507d9d1e6c8ff7d722e730f857b0e866e2b3b6dd88b68f4d6fbccf50473fb3676eec10d9fc6fd4c1270b3c24648c13465282670c1adae91ad97753f680f993077dc2d6343b97c05742d2c2acc88e9e5e33a26d907e6f725e0cc0d2b297063be20beb324684cc72e6f64279cc3daae0dc29eaeabe7c087b71f3bdcb79c64571dded9b8fed69dfe48462c1661d3f213b6b5c5827548918b0c3f4dac3b482b77ef617f75b6fbc81262598983b188ff3b280a8c7d8bba357271f58083b6aab13f33d98271989deb0e98bb0d2625c516755a78bd1c4b3c6500640ae458889821596c310bbfd17d52e241c64a13070ec6309298264a40bf32d8e0e1f8a19160be2d0ec5e70730a1838e4ab9819e1ca76b621ad4c3805016034476a7ed1fe2346faa7fa87f923c97a34605c02986a5d06f1a9f0a04bdde4a5f0b7a54b9e056d5e3903213ab91e5460d8fcb9a2e9d4e73aa7cdf556f5f4514a2b6a429841b37c855baccd4f34584b0d88d097688273becd10fe4b4229ca8964bfe193a7677099edb9d48eea6e6e2b1467be4e9bdfdbcfee08a9e0b67e6654cdf963e0881696fb1854047288e0d1838b04920cc9c5ca8305e40721fefb324a0f948726a1fcb0eef9652af1e3e00212cccd5cf49cff1c79e66d82b5c1e37fdb11635a413bfce686cb693fac4cf0580a4a1e72d73aaaa21a2cc9ec6d3379468de1034d402fd7d620d696accbe225cd1cb887062773caeb1ebac5cd2df1b461ee3fc2cee697a3b0de9a0924bb54fc44cc81ea6ca57833f4cc25387bbe53a7794daf9e89ba6a9a4ac6aff2237bf3b4a2c20969a2c1ec657ab11b82fd09833f8acc7705ecc35fe2f4faea01f0e20ca138832d723b9b7b838210c881fcdb2363828b50d54b5458c7f7ac0f79abfeb5ce0d9eb99d71978f529507e5b1722d78f083214f2fed6fc7a62b34bfe486089e5af9b244fc26a5c47a8458044a61d4aece96a8f23577b8a2df2323f073b74b3758c35c5ee03380c0f863a35d8b8b5defa2ea0704ce8373dd6b1ee38de506d4a49385981e4a22b6d946c3702ce2f6d1ad1de47b022684b85df25886e760bf21777f5a21b74dce6498f35eb61ee8f1b30a86d8399d8db8308560c1cd495262579fbc045ae1b6ba4a866f5f30d5cd7be4b0699ffd65c643b06a766b61dc8473a3f6f618f3fc31fd73f260be26a1b26bb85b04177df4fc7cb76e31536ec0cb9029996bcdf05a3767fa5c462071490bd12727babb7f366de89301a9ddbc77f9de8bd71ea24256c0dc6509f3ceb8b2c596c116b6f0bae9aa2c34b74adc19671ea4141f47219e8681e92a460797760b57f1ebe3df657bde2d22fb299b20512cd297acb14cabf3c9da25870cef69a8e2b7d7b836887a940cbdbe2124c7644c41f0a63bb251f30892566aae8b26574b85ec627aa3ef740794bb82e670b7e2a374ad8392234676cd198f9ee2d66e833151c83fa663c4f7976e53a42a980475dba98a32d55ba37da1eaa580914baa838e938a7039b03ffb16687778b495d6cba9785a1b15df3132c25971a27d7750eb09a594595b94b2a9cda375d16765c1244e619b17afb1f1e58499c63ccddb6a2822d988023b282c3551183b09ec4e1088ca41bf80181edf0e4c6bf6927664bb25978c3a97c64b48901172398574c70df5757dd1c9e9a48c357af3564fc64697dddd2e8ac77b860a7f3d31a809fe3dcbf61e5ccba8beb2616272ec1861225c85cfd1b2cff612a46046ec1659385c9f864c534f65edd3ba795a65327edb3a564e638640fdcefa92af171a0e9994d78b9ee3f18abcae23c817272fde1794b19058b8949a5d00ec4dfb72bfa7eacd7e78983c4fb424a19b03f6204966c2754411ec05ae2bc428c825066b47ea743373f205643a5ac2f75a662c54bc31d6b971bbc6c7bf9a5be1f0d523b9c78e525d4345973db49de65cf7e2b7228d911b3138c1d181d3d96763a781641de0ffca6cfdf771a2a594f51e5196ae7e0cc617d6e8e7af92da653a3899d9cf578be0ecf3b4cdcc71a81bccaf2b808fa6dc6ecf7dc071c7e7bf28c9d1d17fcac9213756f1e4d5c181c26e01a87deccebdd9a1f7be174152ecf58c3fafba4d873d972fe931a2d1ea5d943837520515da36224e5781308b96f056f5010aaae920d193a8717924b2bc7eaace638e549cf49414a694cb40bde6a5fa04e78dabcc5de9ca277f72cd53533c29a31cac7e44e414379c938999523fa321ae1b6e85e4eb5bffadac6ea2a5daf3f06a3f6e66762a2eeb5a42414aa252f1fb0fcc52dd573c28ff354e75454e238e8dd09568d13e1191891bad031aae87346c5891a9c9505e35cf0b3a0413f1855709ae7bec917a3f0b9f443220f300f8015062a4b3419a2a70a15e67d8ec6e8ae3ec7b20f9483ee4b3ffe86fb13ef3f74de02e2353e3c75af7b6f272c852baa6bc27aead3bac6b13726e9e8847de0dab9593677cd7df7daa</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">想知道密码吗，过来问我，我告诉你哦！！！</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>我的博客诞生</category>
      </categories>
      <tags>
        <tag>世界</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言中结构体struct的用法</title>
    <url>/2022/05/30/My_HexoBlog_with_Next(2)/</url>
    <content><![CDATA[<h2 id="定义结构体变量">定义结构体变量</h2>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">string</span> </span></span><br><span class="line"><span class="class">&#123;</span> </span><br><span class="line">   <span class="type">char</span> name[<span class="number">8</span>]; </span><br><span class="line">   <span class="type">int</span> age; </span><br><span class="line">   <span class="type">char</span> sex[<span class="number">2</span>]; </span><br><span class="line">   <span class="type">char</span> depart[<span class="number">20</span>]; </span><br><span class="line">   <span class="type">float</span> wage1, wage2, wage3, wage4, wage5; </span><br><span class="line">&#125;person;</span><br></pre></td></tr></table></figure>
<p>这个例子定义了一个结构名为string的结构体变量person。还可以省略变量名person，做如下定义：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">string</span> </span></span><br><span class="line"><span class="class"> &#123;</span> </span><br><span class="line">    <span class="type">char</span> name[<span class="number">8</span>]; </span><br><span class="line">    <span class="type">int</span> age; </span><br><span class="line">    <span class="type">char</span> sex[<span class="number">2</span>]; </span><br><span class="line">    <span class="type">char</span> depart[<span class="number">20</span>]; </span><br><span class="line">    <span class="type">float</span> wage1, wage2, wage3, wage4, wage5; </span><br><span class="line"> &#125;;  </span><br><span class="line"> <span class="class"><span class="keyword">struct</span> <span class="title">string</span> <span class="title">person</span>;</span>   <span class="comment">//定义结构名为string的结构体变量person</span></span><br></pre></td></tr></table></figure>
<p>定义多个具有相同形式的结构变量：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">string</span> <span class="title">Liming</span>, <span class="title">Liuqi</span>, ...;</span></span><br></pre></td></tr></table></figure>
<p>有一种结构体常常出现在函数内部，省略结构名，则称之为无名结构，如下：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> </span></span><br><span class="line"><span class="class">&#123;</span> </span><br><span class="line">   <span class="type">char</span> name[<span class="number">8</span>]; </span><br><span class="line">   <span class="type">int</span> age; </span><br><span class="line">   <span class="type">char</span> sex[<span class="number">2</span>]; </span><br><span class="line">   <span class="type">char</span> depart[<span class="number">20</span>]; </span><br><span class="line">   <span class="type">float</span> wage1, wage2, wage3, wage4, wage5; </span><br><span class="line">&#125; Liming, Liuqi;</span><br></pre></td></tr></table></figure>
<h2 id="结构体成员的获取与赋值">结构体成员的获取与赋值</h2>
<p>结构是一个新的数据类型，结构成员的表示方式为:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">结构变量.成员名</span><br></pre></td></tr></table></figure>
<p>如果将&quot;结构变量.成员名&quot;看成一个整体，这样就可以像其他变量那样使用。</p>
<p>下面这个例子定义了一个结构变量stu1，分别给name,age,group赋值，并打印输出。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line">        <span class="type">char</span> *name;  <span class="comment">//姓名</span></span><br><span class="line">        <span class="type">int</span> age;  <span class="comment">//年龄</span></span><br><span class="line">        <span class="type">char</span> group;  <span class="comment">//所在小组</span></span><br><span class="line">    &#125; stu1;</span><br><span class="line">    <span class="comment">//给结构体成员赋值</span></span><br><span class="line">    stu1.name = <span class="string">&quot;Tom&quot;</span>;</span><br><span class="line">    stu1.age = <span class="number">18</span>;</span><br><span class="line">    stu1.group = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">    <span class="comment">//读取结构体成员的值</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s的年龄是%d，在%c组\n&quot;</span>, stu1.name, stu1.age, stu1.group);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="结构体数组">结构体数组</h2>
<p>结构体数组就是具有相同结构类型的变量集合，假如要定义一个班级40个同学 的姓名、性别、年龄和住址, 可以定义成一个结构数组。如下所示：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">char</span> name[<span class="number">8</span>]; </span><br><span class="line">    <span class="type">char</span> sex[<span class="number">2</span>]; </span><br><span class="line">    <span class="type">int</span> age; </span><br><span class="line">    <span class="type">char</span> addr[<span class="number">40</span>]; </span><br><span class="line">&#125;student[<span class="number">40</span>];</span><br></pre></td></tr></table></figure>
<p>结构体数组成员的访问是以数组元素为结构变量的, 其形式为:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">结构数组元素.成员名</span><br></pre></td></tr></table></figure>
<p>例如：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">student[<span class="number">0</span>].name</span><br><span class="line">student[<span class="number">30</span>].age</span><br></pre></td></tr></table></figure>
<h2 id="结构体指针">结构体指针</h2>
<p>结构体指针由一个加在结构变量名前的*操作符来定义，定义一个结构体指针如下：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">string</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">   <span class="type">char</span> name[<span class="number">8</span>] </span><br><span class="line">   <span class="type">char</span> sex[<span class="number">2</span>]; </span><br><span class="line">   <span class="type">int</span> age; </span><br><span class="line">   <span class="type">char</span> addr[<span class="number">40</span>]; </span><br><span class="line">&#125;*student;</span><br></pre></td></tr></table></figure>
<p>使用结构体指针对结构体成员的访问与结构体变量对结构体成员的访问在表达方式不同。结构体指针对结构体成员的访问方式为：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">结构体指针名-&gt;结构体成员 </span><br></pre></td></tr></table></figure>
<p>给上面定义的结构体中name和age赋值的语句：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">strcpy</span>(student-&gt;name, <span class="string">&quot;acket&quot;</span>); <span class="comment">//student-&gt;name就是(*student).name</span></span><br><span class="line">student-&gt;age=<span class="number">18</span>; </span><br></pre></td></tr></table></figure>
<p>需要指出的是结构体指针是指向结构体的一个指针，即结构体中第一个成员的首地址，因此在使用之前应该对结构体指针初始化，即分配整个结构体长度的字节空间：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">student=(<span class="keyword">struct</span> <span class="built_in">string</span>*)<span class="built_in">malloc</span>(size of (<span class="keyword">struct</span> <span class="built_in">string</span>));</span><br><span class="line"><span class="comment">//size of (struct string)是自动求取string结构体的字节长度</span></span><br></pre></td></tr></table></figure>
<p>malloc()函数定义了一个大小为结构体长度的内存区域，然后将其地址作为结构体指针返回，相关文章:<a href="http://mp.weixin.qq.com/s?__biz=MzI1MDg4OTMwMw==&amp;mid=2247484098&amp;idx=2&amp;sn=53a5d30075027b190205da6a83fef682&amp;chksm=e9fa17fade8d9eec6461cd135f1d559912daa6819084b9a88ffca258868f80be99bf5d3d1f2f&amp;scene=21#wechat_redirect">C语言中的内存管理</a>。</p>
<h2 id="位结构">位结构</h2>
<p>位结构是一种特殊的结构体，位结构定义的一般形式为：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span>  位结构名</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    数据类型 变量名: 整型常数; </span><br><span class="line">     数据类型 变量名: 整型常数; </span><br><span class="line">&#125;位结构变量;</span><br></pre></td></tr></table></figure>
<p>其中数据类型必须是int（unsigned或signed，但当成员长度为1时, 会被认为是unsigned类型），整型常数必须是0~15的非负整数，表示二进制位个数。变量名是选择项，可以不命名，下面定义了一个位结构：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">unsigned</span> incon: <span class="number">8</span>;    <span class="comment">/*incon占用低字节 的0~7共8位*/</span> </span><br><span class="line">    <span class="type">unsigned</span> txcolor: <span class="number">4</span>;<span class="comment">/*txcolor占用高字节的0~3位共4位*/</span> </span><br><span class="line">    <span class="type">unsigned</span> bgcolor: <span class="number">3</span>;<span class="comment">/*bgcolor占用高字节的4~6位共3位*/</span> </span><br><span class="line">    <span class="type">unsigned</span> blink: <span class="number">1</span>;  <span class="comment">/*blink占用高字节的第7位*/</span></span><br><span class="line"> &#125;ch;</span><br></pre></td></tr></table></figure>
<p>位结构成员的访问与结构体成员的访问相同，访问位结构中的bgcolor成员可写成：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">ch.bgcolor</span><br></pre></td></tr></table></figure>
<p>举个例子</p>
<p><img data-src="/images%5C%E7%BB%93%E6%9E%84%E4%BD%93.png" alt="例图"></p>
<h2 id="typedef定义结构体">typedef定义结构体</h2>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>  <span class="title">person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> age ;</span><br><span class="line">    <span class="type">char</span> *name;</span><br><span class="line">    <span class="type">char</span> *sex;</span><br><span class="line">&#125;student;</span><br><span class="line"></span><br><span class="line">student stu1; <span class="comment">//此处可以用student来定义一个结构体变量</span></span><br></pre></td></tr></table></figure>
<p>typedef的作用就相当于给struct person取了一个别名student。</p>
]]></content>
      <categories>
        <category>C语言基础知识</category>
      </categories>
      <tags>
        <tag>结构体</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言指针用法</title>
    <url>/2022/06/01/My_HexoBlog_with_Next(2)/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>C语言基础知识</category>
      </categories>
      <tags>
        <tag>指针</tag>
      </tags>
  </entry>
</search>
